# Sum matrix with 2D grid and 2D block

[ cuda ch2 ] USE-MODULES


# --------------------------------------
# Init
: DEV-INDEX   0 ;
: DEV-NAME    DEV-INDEX CUDA-GET-DEVICE-PROPERTIES "name" DEV-PROP ;
: INIT-DEV    DEV-NAME PRINT  DEV-INDEX CUDA-SET-DEVICE ;

: NX          1 14 << ;
: NY          1 14 << ;
: NXY         NX NY * ;
: NUM-BYTES   NXY FLOAT SIZEOF * ;

: PRINT-INFO  [ "Matrix size: nx " NX " ny " NY ] CONCAT PRINT ;

[ "h_A" "h_B" "hostRef" "gpuRef" ] VARIABLES
[ "d_A" "d_B" "d_C" ] VARIABLES

: h_A!       NUM-BYTES MALLOC h_A !
             NOW h_A @ NXY INIT-DATA NOW SINCE [ SWAP " ms h_A!" ] CONCAT PRINT ;
: h_B!       NUM-BYTES MALLOC h_B !       h_B @ NXY INIT-DATA ;
: hostRef!   NUM-BYTES MALLOC hostRef !   hostRef @ 0 NUM-BYTES MEMSET ;
: gpuRef!    NUM-BYTES MALLOC gpuRef !    gpuRef @ 0 NUM-BYTES MEMSET ;
: d_A!       NUM-BYTES CUDA-MALLOC d_A !
             NOW d_A @ h_A @ NUM-BYTES CUDA-MEMCPY-HtD NOW SINCE [ SWAP " ms d_A!" ] CONCAT PRINT ;
: d_B!       NUM-BYTES CUDA-MALLOC d_B !  d_B @ h_B @ NUM-BYTES CUDA-MEMCPY-HtD ;
: d_C!       NUM-BYTES CUDA-MALLOC d_C !  d_C @ gpuRef @ NUM-BYTES CUDA-MEMCPY-HtD ;
: INIT-DATA  NOW h_A! h_B! hostRef! gpuRef! d_A! d_B! d_C! NOW SINCE [ SWAP " ms Init" ] CONCAT PRINT ;

: BLOCK      32 1 1 DIM3 ;
: GRID.x     NX BLOCK >x + 1 - BLOCK >x / ;
: GRID.y     NY BLOCK >y + 1 - BLOCK >y / ;
: GRID       GRID.x GRID.y 1 DIM3 ;

: LOAD-SUM   gpuRef @ d_C @ NUM-BYTES CUDA-MEMCPY-DtH ;
: DEV-SUM    GRID BLOCK  d_A @ d_B @ d_C @ NX NY D-SUM-MATRICES-2DGRID-1DBLOCK LOAD-SUM ;
: HOST-SUM   NOW  h_A @  h_B @  hostRef @ NX NY  H-SUM-MATRICES NOW SINCE PRINT ;
: CHECK-SUM  hostRef @ gpuRef @ NXY CHECK-RESULT ;

: FREE-DATA  [ h_A h_B hostRef gpuRef ] "@ FREE" FOREACH  [ d_A d_B d_C ] "@ CUDA-FREE" FOREACH ;
: INIT       INIT-DEV INIT-DATA ;

: RUN        INIT PRINT-INFO DEV-SUM HOST-SUM CHECK-SUM FREE-DATA CUDA-DEVICE-RESET ;
RUN
